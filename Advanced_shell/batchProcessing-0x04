#!/bin/bash

# List of Pokémon
POKEMONS=("bulbasaur" "ivysaur" "venusaur" "charmander" "charmeleon")

# Directory and log setup
OUTPUT_DIR="pokemon_data"
LOG_FILE="errors_parallel.log"
mkdir -p "$OUTPUT_DIR"
> "$LOG_FILE"

# Array to hold background process IDs
PIDS=()

# Function to fetch data
fetch_pokemon() {
    local POKEMON=$1
    local OUTPUT_FILE="$OUTPUT_DIR/$POKEMON.json"

    echo "Fetching data for $POKEMON..."

    if curl -s -f "https://pokeapi.co/api/v2/pokemon/$POKEMON" -o "$OUTPUT_FILE"; then
        echo "Saved data to $OUTPUT_FILE ✅"
    else
        echo "❌ Failed to fetch data for $POKEMON" >> "$LOG_FILE"
    fi
}

# Trap to handle script interruption (Ctrl+C) and kill background jobs
trap 'echo "Script interrupted. Killing background processes..."; kill ${PIDS[*]} 2>/dev/null; exit 1' SIGINT

# Launch all fetch operations in parallel
for POKEMON in "${POKEMONS[@]}"; do
    fetch_pokemon "$POKEMON" &
    PIDS+=($!)  # Store PID of background job
done

# Wait for all background jobs to complete
for PID in "${PIDS[@]}"; do
    wait "$PID"
done

echo "✅ All Pokémon fetch operations complete."

